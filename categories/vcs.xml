<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tech log (Posts about vcs)</title><link>https://mnod.github.io/</link><description></description><atom:link href="https://mnod.github.io/categories/vcs.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2021 &lt;a href="mailto:mnod@example.com"&gt;mnod&lt;/a&gt; </copyright><lastBuildDate>Tue, 22 Jun 2021 00:13:09 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>git</title><link>https://mnod.github.io/posts/20170902.html</link><dc:creator>mnod</dc:creator><description>&lt;div&gt;&lt;p&gt;オープンソースの分散型VCS。同種のアプリケーションと比較してgitが優れているところは、ユーザが多く情報が多いという点。&lt;/p&gt;
&lt;p&gt;gitリポジトリの作成&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd myproject
git init
git add .
git status
git diff
git rm [-r] target # -rで、ディレクトリを削除
git commit -m "commit message"
git log
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;作業ディレクトリを持たない公開用リポジトリの作成&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git init --bare
or
git clone --bare myproject myproject.git

git log
git branch
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;単純なリモート作業&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone git://example.com/.../myproject.git # リポジトリのclone
cd myproject
:
git push [origin] [master] # 変更内容をpush

git pull # fetchしてmerge
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ブランチを作成し作業対象とする&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git branch master
git pull
git checkout -b mybranch
git branch
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;masterブランチにマージ。不要なブランチの削除&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git checkout master
git merge mybranch
git branch -d mybranch
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ブランチをリモートにpush&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git push origin mybranch
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ブランチをリモートからfetchして作業&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git fetch origin
git branch -a
git checkout -b mybranch origin/mybranch # ブランチを作成してチェックアウト
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;リモートブランチの削除&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git push origin :mybranch
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;change last commit&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git add file
git commit --amend -m "commit message"
git push -f origin master
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Stash the changes in a dirty working directory away&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git stash
git stash list
git stash show -p stash@{0}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;apply stash on top of the current working directory. and remove a stash from the list&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git stash apply stash@{0}
git stash drop stash@{0}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;reset indext to cancel add operation and leave the file as it is&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git reset HEAD xxxx.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ignore file permission change (chmod)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git config --local core.filemode false
git config --local --list
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;example of URIs&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssh://username@serverhostname/var/lib/git/myrepository.git
file:///var/lib/git/myrepository.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><category>git</category><category>vcs</category><guid>https://mnod.github.io/posts/20170902.html</guid><pubDate>Sat, 02 Sep 2017 00:00:00 GMT</pubDate></item></channel></rss>