<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tech log (Posts about kvm)</title><link>https://mnod.github.io/</link><description></description><atom:link href="https://mnod.github.io/categories/kvm.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2021 &lt;a href="mailto:mnod@example.com"&gt;mnod&lt;/a&gt; </copyright><lastBuildDate>Thu, 23 Sep 2021 09:21:49 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>kvm on raspberrypi</title><link>https://mnod.github.io/posts/20200927.html</link><dc:creator>mnod</dc:creator><description>&lt;div&gt;&lt;p&gt;kvm On Raspberry Pi OS (64bit) beta test version&lt;/p&gt;
&lt;p&gt;related packages&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo apt install --no-install-recommends qemu-system-arm qemu-utils kpartx
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;boot alpine linux&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;get kernel and initra from the iso file&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo mount -o loop alpine-standard-3.12.0-aarch64.iso /media/tmp
$ sudo cp /media/tmp/boot/initramfs-lts .
$ sudo cp /media/tmp/boot/vmlinuz-lts .
$ sudo umount /media/tmp
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;boot&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo qemu-system-aarch64 -cpu host -enable-kvm -machine virt -nographic -m 512 \
&amp;gt; -kernel vmlinuz-lts -initrd initramfs-lts \
&amp;gt; -drive if=none,id=image,file=alpine-standard-3.12.0-aarch64.iso -device virtio-blk-device,drive=image \
&amp;gt; -netdev user,id=user0 -device virtio-net-device,netdev=user0 \
&amp;gt; -monitor telnet:localhost:10025,server,nowait
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;install debian10&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;download kernel and initrd file and create an empty virtual image file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ wget -O linux http://ftp.jp.debian.org/debian/dists/buster/main/installer-arm64/current/images/netboot/debian-installer/arm64/linux
$ wget -O initrd.gz http://ftp.jp.debian.org/debian/dists/buster/main/installer-arm64/current/images/netboot/debian-installer/arm64/initrd.gz
$ qemu-img create -f qcow2 hda.qcow2 16G
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;boot the installer with downloaded kernel and initrd file and install to the virtual image file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo qemu-system-aarch64 -cpu host -enable-kvm -machine virt -m 512 \
&amp;gt; -kernel linux -initrd initrd.gz \
&amp;gt; -drive if=none,id=image,file=debian10.qcow2 -device virtio-blk-device,drive=image \
&amp;gt; -netdev user,id=user0 -device virtio-net-device,netdev=user0 \
&amp;gt; -monitor telnet:localhost:10025,server,nowait \
&amp;gt; -no-reboot -vnc :1

$ vncviewer xxx.xxx.xxx.xxx:5901
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;get kernel and initrd file from qcow2 file&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ lsmod | grep nbd
$ sudo modprobe nbd
$ sudo qemu-nbd -c /dev/nbd0 debian10.qcow2
$ sudo kpartx -av /dev/nbd0
$ sudo mount /dev/mapper/nbd0p1 /media/tmp

$ cp /media/tmp/initrd.img-4.19.0-11-arm64 .
$ cp /media/tmp/vmlinuz-4.19.0-11-arm64 .

$ sudo umount /media/tmp
$ sudo kpartx -dv /dev/nbd0
$ sudo qemu-nbd -d /dev/nbd0
$ sudo rmmod nbd
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;boot&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo qemu-system-aarch64 -cpu host -enable-kvm -machine virt -m 512 \
&amp;gt; -kernel vmlinuz-4.19.0-11-arm64 -initrd initrd.img-4.19.0-11-arm64 \
&amp;gt; -append 'root=/dev/vda2' \
&amp;gt; -drive if=none,id=image,file=debian10.qcow2 -device virtio-blk-device,drive=image \
&amp;gt; -netdev user,id=user0 -device virtio-net-device,netdev=user0 \
&amp;gt; -monitor telnet:localhost:10025,server,nowait \
&amp;gt; -nographic
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><category>kvm</category><category>linux</category><category>raspberrypi</category><guid>https://mnod.github.io/posts/20200927.html</guid><pubDate>Sun, 27 Sep 2020 00:00:00 GMT</pubDate></item><item><title>kvm virtualization</title><link>https://mnod.github.io/posts/20170325.html</link><dc:creator>mnod</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;em&gt;qcow2 イメージ&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;作成。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;qemu-img create -f qcow2 image.qcow2 xxG
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;シュリンク。仮想マシンを止めて実行する。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mv image.qcow2 image.qcow2.bak
qemu-img convert -O qcow2  image.qcow2.bak image.qcow2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;qemu-kvm コマンドのよく使うオプション&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;cdイメージから起動&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-cdrom image.iso -boot d
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;cpuとメモリの指定&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-smp 2 -m 2048
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;kvmでwindows10を使用する時、私の環境(Core i5 650)だと下記のように指定することで、cpu負荷が落ち着いた。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-cpu core2duo,+lahf_lm
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;その後、試行錯誤し、現在は下記の通り指定している。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-cpu host,hv_relaxed,hv_spinlocks=0x1fff,hv_vapic,hv_time
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(仮想)ストレージの指定。準仮想化ドライバを利用すると、スループットが上がるらしい。
(Windows等で利用する場合は、仮想マシン上でドライバを入れる必要がある。)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-drive if=virtio,file=image.qcow2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ネットワークインターフェースの指定(従来方式)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-net nic,macaddr=xx:xx:xx:xx:xx:xx,model=virtio
-net tap,ifname=vnet0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;vncコンソールとキーマップの指定。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-vnc 192.168.xx.xx:xx -k ja
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;コンソールのマウスカーソルの位置がずれるときは以下を指定
(WindowsではCPU負荷が高くなるらしい)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-usbdevice tablet
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;デーモンとして起動&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-daemonize
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;物理デバイスのパススルー&lt;/p&gt;
&lt;p&gt;&lt;em&gt;example&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;boot ultra lite linux distribution microcore linux for network configure test&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kvm -drive if=virtio,file=linux-microcore-6.4.img -netdev tap,id=tap0 -device e1000,netdev=tap0,mac=52:54:00:12:34:56
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><category>kvm</category><category>linux</category><category>virtualization</category><guid>https://mnod.github.io/posts/20170325.html</guid><pubDate>Sat, 25 Mar 2017 00:00:00 GMT</pubDate></item></channel></rss>